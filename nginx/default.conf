# upstream www_server {
#     server localhost:443;
#     keepalive 32;
# }
# # http跳转https
# server {
#     listen 80;
#     server_name www.watermelon02.cn;

#     rewrite ^(.*)$ https://www.watermelon02.cn;
# }
# # 设置缓存的目录，并且内存中缓存区名为hot_cache，大小为128m，
# # 三天未被访问过的缓存自动清楚，磁盘中缓存的最大容量为2GB。
# # proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=hot_cache:128m inactive=3d max_size=2g;
# server {
#     # 打开SSL加密传输
#     listen 443 ssl;
#     server_name www.watermelon02.cn;

#     # 配置自己下载的数字证书
#     ssl_certificate certificate/watermelon02.cn_bundle.pem;
#     # 配置自己下载的服务器私钥
#     ssl_certificate_key certificate/watermelon02.cn.key;
#     # 停止通信时，加密会话的有效期，在该时间段内不需要重新交换密钥
#     ssl_session_timeout 5m;
#     # TLS握手时，服务器采用的密码套件
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
#     # 服务器支持的TLS版本
#     ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#     # 开启由服务器决定采用的密码套件
#     ssl_prefer_server_ciphers on;

#     # 开启压缩机制
#     gzip on;
#     # 指定会被压缩的文件类型(也可自己配置其他类型)
#     gzip_types text/plain application/javascript text/css application/xml text/javascript image/jpeg image/gif image/png;
#     # 设置压缩级别，越高资源消耗越大，但压缩效果越好
#     gzip_comp_level 6;
#     # 在头部中添加Vary: Accept-Encoding
#     gzip_vary on;
#     # 处理压缩请求的缓冲区数量和大小
#     gzip_buffers 16 16k;
#     # 对于不支持压缩功能的客户端请求不开启压缩机制
#     gzip_disable "MSIE [1-6]\."; # 低版本的IE浏览器不支持压缩
#     # 设置压缩响应所支持的HTTP最低版本
#     gzip_http_version 1.1;
#     # 设置触发压缩的最小阈值
#     gzip_min_length 1k;
#     # 关闭对后端服务器的响应结果进行压缩
#     gzip_proxied off;

#     location / {
#         # 输入域名后，首页文件所在的目录
#         root /usr/share/nginx/html;
#         # 配置首页的文件名
#         index index.html index.htm;
#         # 为了vue在直接在地址栏输入或者刷新时能加载页面
#         try_files $uri $uri/ @router;

#         # proxy_cache hot_cache;
#         # # 对于200、206、304、301、302状态码的数据缓存1天
#         # proxy_cache_valid 200 206 304 301 302 1d;
#         # # 对于其他状态的数据缓存30分钟
#         # proxy_cache_valid any 30m;
#         # # 定义生成缓存键的规则（请求的url+参数作为key）
#         # proxy_cache_key $host$uri$is_args$args;
#         # # 资源至少被重复访问1次后再加入缓存
#         # proxy_cache_min_uses 1;
#         # # 出现重复请求时，只让一个去后端读数据，其他的从缓存中读取
#         # proxy_cache_lock on;
#         # # 上面的锁超时时间为3s，超过3s未获取数据，其他请求直接去后端
#         # proxy_cache_lock_timeout 6s;
#         # # 在响应头中添加一个缓存是否命中的状态（便于调试）
#         # add_header Nginx-Cache $upstream_cache_status;
#     }

#     # 为了vue在直接在地址栏输入或者刷新时能加载页面
#     location @router {
#         rewrite ^.*$ /index.html last;
#     }

#     location ~* ^.+\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css|svg) {
#         root /usr/share/nginx/html;
#         expires 7d;
#     }

#     #error_page  404              /404.html;

#     # redirect server error pages to the static page /50x.html
#     #
#     error_page 500 502 503 504 /50x.html;
#     location = /50x.html {
#         root /usr/share/nginx/html;
#     }
# }
